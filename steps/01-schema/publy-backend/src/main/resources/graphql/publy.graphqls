type Story  {
    id: ID!
    "The title of this Story, should be short and precise"
    title: String!

    createdAt: String!
    writtenBy: Member!

    "The actual story text. Can contain markdown for formatting"
    body: String!

    """List of Comments that this Story has received"""
    comments: [Comment!]!
}

"""
A Member is a person that is part of our application.

"""
type Member {
    id: ID!
    createdAt: String!
    profileImageUrl: String!
}

"""
A Comment is written by a Member for a Story of another member

A Comment cannot be changed and does not have a title.

"""
type Comment {
    id: ID!

    "When was this comment written?"
    createdAt: String!
    writtenBy: Member!

    content: String!
    story: Story!
}


type Query {
    """
    Returns the `Story` with the specified `id` or null if there is no `Story`
    with that `id`.

    If you don't specify an `id`, the topmost story is returned
    """
    story(id: ID): Story

    """Returns all stories, ordered by their creation date, newest first"""
    stories: [Story!]!
}
